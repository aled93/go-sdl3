package wasm

type InstructionInfo struct {
	Opcode   uint32
	Name     string
	Operands []Oper
	StackIn  []Type
	StackOut []Type
}

type Oper uint8

const (
	Oper_Special Oper = iota // for control instructions
	Oper_Ref                 // $g0, 1
	Oper_T1
	Oper_T2
	Oper_ConstI32
	Oper_ConstI64
	Oper_ConstI128
	Oper_ConstF32
	Oper_ConstF64
	Oper_MemArg // offset=123 [align=4]
	Oper_LaneIdx
)

type GenericType interface {
	Type
	isGenericType()
	genericIndex() int
}

type genericType struct {
	index int
}

func (genericType) isType()        {}
func (genericType) isGenericType() {}
func (g genericType) genericIndex() int {
	return g.index
}

var (
	t1 = &genericType{0}
)

// list of basic instructions, i.e. instructions
// with fixed inputs and outputs
var BasicInstructions = []InstructionInfo{
	{
		Opcode:   0x00,
		Name:     "unreachable",
		Operands: []Oper{Oper_Special},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x01,
		Name:     "nop",
		Operands: nil,
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x02,
		Name:     "block",
		Operands: []Oper{Oper_Special},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x03,
		Name:     "loop",
		Operands: []Oper{Oper_Special},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x04,
		Name:     "if",
		Operands: []Oper{Oper_Special},
		StackIn:  []Type{Type_i32},
		StackOut: nil,
	},
	{
		Opcode:   0x05,
		Name:     "if",
		Operands: nil,
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x0B,
		Name:     "end",
		Operands: nil,
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x0C,
		Name:     "br",
		Operands: []Oper{Oper_Ref},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x0D,
		Name:     "br_if",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{Type_i32},
		StackOut: nil,
	},
	{
		Opcode:   0x0E,
		Name:     "br_table",
		Operands: []Oper{Oper_Special},
		StackIn:  []Type{Type_i32},
		StackOut: nil,
	},
	{
		Opcode:   0x0F,
		Name:     "return",
		Operands: nil,
		StackIn:  []Type{t1},
		StackOut: nil,
	},
	{
		Opcode:   0x10,
		Name:     "call",
		Operands: []Oper{Oper_Ref},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x0F,
		Name:     "call_indirect",
		Operands: []Oper{Oper_Ref, Oper_Ref},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Opcode:   0x1A,
		Name:     "drop",
		Operands: nil,
		StackIn:  []Type{t1},
		StackOut: nil,
	},
	{
		Opcode:   0x1B,
		Name:     "select",
		Operands: nil,
		StackIn:  []Type{t1, t1, Type_i32},
		StackOut: []Type{t1},
	},
	{
		Opcode:   0x1C,
		Name:     "select",
		Operands: []Oper{Oper_T1},
		StackIn:  []Type{t1, t1, Type_i32},
		StackOut: []Type{t1},
	},
	{
		Opcode:   0x20,
		Name:     "local.get",
		Operands: []Oper{Oper_Ref},
		StackIn:  nil,
		StackOut: []Type{t1},
	},
	{
		Opcode:   0x21,
		Name:     "local.set",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{t1},
		StackOut: nil,
	},
	{
		Opcode:   0x22,
		Name:     "local.tee",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{t1},
		StackOut: []Type{t1},
	},
	{
		Opcode:   0x23,
		Name:     "global.get",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{t1},
		StackOut: []Type{t1},
	},
	{
		Opcode:   0x24,
		Name:     "global.set",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{t1},
		StackOut: nil,
	},
	{
		Opcode:   0x25,
		Name:     "table.get",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{t1},
	},
	{
		Opcode:   0x26,
		Name:     "table.set",
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{Type_i32, t1},
		StackOut: nil,
	},
	{
		Opcode:   0x28,
		Name:     "i32.load",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x29,
		Name:     "i64.load",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x2A,
		Name:     "f32.load",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_f32},
	},
	{
		Opcode:   0x2B,
		Name:     "i64.load",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x2C,
		Name:     "i32.load8_s",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x2D,
		Name:     "i32.load8_u",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x2E,
		Name:     "i32.load16_s",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x2F,
		Name:     "i32.load16_u",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x30,
		Name:     "i64.load8_s",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x31,
		Name:     "i64.load8_u",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x32,
		Name:     "i64.load16_s",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x33,
		Name:     "i64.load16_u",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x34,
		Name:     "i64.load32_s",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x35,
		Name:     "i64.load32_u",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x36,
		Name:     "i32.store",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Opcode:   0x37,
		Name:     "i64.store",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i64},
		StackOut: nil,
	},
	{
		Opcode:   0x38,
		Name:     "f32.store",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_f32},
		StackOut: nil,
	},
	{
		Opcode:   0x39,
		Name:     "f64.store",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_f64},
		StackOut: nil,
	},
	{
		Opcode:   0x3A,
		Name:     "i32.store8",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Opcode:   0x3B,
		Name:     "i32.store16",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Opcode:   0x3C,
		Name:     "i64.store8",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i64},
		StackOut: nil,
	},
	{
		Opcode:   0x3D,
		Name:     "i64.store16",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i64},
		StackOut: nil,
	},
	{
		Opcode:   0x3E,
		Name:     "i64.store32",
		Operands: []Oper{Oper_MemArg},
		StackIn:  []Type{Type_i32, Type_i64},
		StackOut: nil,
	},
	{
		Opcode:   0x3F,
		Name:     "memory.size",
		Operands: nil,
		StackIn:  nil,
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x40,
		Name:     "memory.grow",
		Operands: nil,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x41,
		Name:     "i32.const",
		Operands: []Oper{Oper_ConstI32},
		StackIn:  nil,
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x42,
		Name:     "i64.const",
		Operands: []Oper{Oper_ConstI64},
		StackIn:  nil,
		StackOut: []Type{Type_i64},
	},
	{
		Opcode:   0x43,
		Name:     "f32.const",
		Operands: []Oper{Oper_ConstF32},
		StackIn:  nil,
		StackOut: []Type{Type_f32},
	},
	{
		Opcode:   0x44,
		Name:     "f64.const",
		Operands: []Oper{Oper_ConstF64},
		StackIn:  nil,
		StackOut: []Type{Type_f64},
	},
	{
		Opcode:   0x45,
		Name:     "i32.eqz",
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x46,
		Name:     "i32.eq",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x47,
		Name:     "i32.ne",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x48,
		Name:     "i32.lt_s",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x49,
		Name:     "i32.lt_u",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x4A,
		Name:     "i32.gt_s",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x4B,
		Name:     "i32.gt_u",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x4C,
		Name:     "i32.le_s",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x4D,
		Name:     "i32.le_u",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x4E,
		Name:     "i32.ge_s",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x4F,
		Name:     "i32.ge_u",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x50,
		Name:     "i64.eqz",
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x51,
		Name:     "i64.eq",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x52,
		Name:     "i64.ne",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x53,
		Name:     "i64.lt_s",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x54,
		Name:     "i64.lt_u",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x55,
		Name:     "i64.gt_s",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x56,
		Name:     "i64.gt_u",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x57,
		Name:     "i64.le_s",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x58,
		Name:     "i64.le_u",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x59,
		Name:     "i64.ge_s",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x5A,
		Name:     "i64.ge_u",
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x5B,
		Name:     "f32.eq",
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x5C,
		Name:     "f32.ne",
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x5D,
		Name:     "f32.lt",
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x5E,
		Name:     "f32.gt",
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x5F,
		Name:     "f32.le",
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x60,
		Name:     "f32.ge",
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x61,
		Name:     "f64.eq",
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x62,
		Name:     "f64.ne",
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x63,
		Name:     "f64.lt",
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x64,
		Name:     "f64.gt",
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x65,
		Name:     "f64.le",
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x66,
		Name:     "f64.ge",
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x67,
		Name:     "i32.clz",
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x68,
		Name:     "i32.ctz",
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x69,
		Name:     "i32.popcnt",
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x6A,
		Name:     "i32.add",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x6B,
		Name:     "i32.ub",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x6C,
		Name:     "i32.mul",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x6D,
		Name:     "i32.div_s",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Opcode:   0x6E,
		Name:     "i32.div_u",
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.rem_s",
		Opcode:   0x6F,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.rem_u",
		Opcode:   0x70,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.and",
		Opcode:   0x71,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.or",
		Opcode:   0x72,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.xor",
		Opcode:   0x73,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.shl",
		Opcode:   0x74,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.shr_s",
		Opcode:   0x75,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.shr_u",
		Opcode:   0x76,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.rotl",
		Opcode:   0x77,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.rotr",
		Opcode:   0x78,
		StackIn:  []Type{Type_i32, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64.clz",
		Opcode:   0x79,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.ctz",
		Opcode:   0x7A,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.popcnt",
		Opcode:   0x7B,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.add",
		Opcode:   0x7C,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.sub",
		Opcode:   0x7D,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.mul",
		Opcode:   0x7E,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.div_s",
		Opcode:   0x7F,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.div_u",
		Opcode:   0x80,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.rem_s",
		Opcode:   0x81,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.rem_u",
		Opcode:   0x82,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.and",
		Opcode:   0x83,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.or",
		Opcode:   0x84,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.xor",
		Opcode:   0x85,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.shl",
		Opcode:   0x86,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.shr_s",
		Opcode:   0x87,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.shr_u",
		Opcode:   0x88,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.rotl",
		Opcode:   0x89,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.rotr",
		Opcode:   0x8A,
		StackIn:  []Type{Type_i64, Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "f32.abs",
		Opcode:   0x8B,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.neg",
		Opcode:   0x8C,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.ceil",
		Opcode:   0x8D,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.floor",
		Opcode:   0x8E,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.trunc",
		Opcode:   0x8F,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.nearest",
		Opcode:   0x90,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.sqrt",
		Opcode:   0x91,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.add",
		Opcode:   0x92,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.sub",
		Opcode:   0x93,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.mul",
		Opcode:   0x94,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.div",
		Opcode:   0x95,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.min",
		Opcode:   0x96,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.max",
		Opcode:   0x97,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.copysign",
		Opcode:   0x98,
		StackIn:  []Type{Type_f32, Type_f32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f64.abs",
		Opcode:   0x99,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.neg",
		Opcode:   0x9A,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.ceil",
		Opcode:   0x9B,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.floor",
		Opcode:   0x9C,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.trunc",
		Opcode:   0x9D,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.nearest",
		Opcode:   0x9E,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.sqrt",
		Opcode:   0x9F,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.add",
		Opcode:   0xA0,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.sub",
		Opcode:   0xA1,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.mul",
		Opcode:   0xA2,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.div",
		Opcode:   0xA3,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.min",
		Opcode:   0xA4,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.max",
		Opcode:   0xA5,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.copysign",
		Opcode:   0xA6,
		StackIn:  []Type{Type_f64, Type_f64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "i32.wrap_i64",
		Opcode:   0xA7,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_f32_s",
		Opcode:   0xA8,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_f32_u",
		Opcode:   0xA9,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_f64_s",
		Opcode:   0xAA,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_f64_u",
		Opcode:   0xAB,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64.extend_i32_s",
		Opcode:   0xAC,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.extend_i32_u",
		Opcode:   0xAD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_f32_s",
		Opcode:   0xAE,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_f32_u",
		Opcode:   0xAF,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_f64_s",
		Opcode:   0xB0,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_f64_u",
		Opcode:   0xB1,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "f32.convert_i32_s",
		Opcode:   0xB2,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.convert_i32_u",
		Opcode:   0xB3,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.convert_i64_s",
		Opcode:   0xB4,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.convert_i64_u",
		Opcode:   0xB5,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32.demote_f64",
		Opcode:   0xB6,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f64.convert_i32_s",
		Opcode:   0xB7,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.convert_i32_u",
		Opcode:   0xB8,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.convert_i64_s",
		Opcode:   0xB9,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.convert_i64_u",
		Opcode:   0xBA,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64.promote_f32",
		Opcode:   0xBB,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "i32.reinterpret_f32",
		Opcode:   0xBC,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64.reinterpret_f64",
		Opcode:   0xBD,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "f32.reinterpret_i32",
		Opcode:   0xBE,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f64.reinterpret_i64",
		Opcode:   0xBF,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "i32.extend8_s",
		Opcode:   0xC0,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.extend16_s",
		Opcode:   0xC1,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64.extend8_s",
		Opcode:   0xC2,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.extend16_s",
		Opcode:   0xC3,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.extend32_s",
		Opcode:   0xC4,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "ref.null",
		Operands: []Oper{Oper_T1},
		Opcode:   0xD0,
		StackIn:  nil,
		StackOut: []Type{t1},
	},
	{
		Name:     "ref.is_null",
		Opcode:   0xD1,
		StackIn:  []Type{t1},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "ref.func",
		Operands: []Oper{Oper_Ref},
		Opcode:   0xD2,
		StackIn:  nil,
		StackOut: []Type{Type_FuncRef},
	},
	{
		Name:     "i32.trunc_sat_f32_s",
		Opcode:   0x00_FC,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_sat_f32_u",
		Opcode:   0x01_FC,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_sat_f64_s",
		Opcode:   0x02_FC,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32.trunc_sat_f64_u",
		Opcode:   0x03_FC,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64.trunc_sat_f32_s",
		Opcode:   0x04_FC,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_sat_f32_u",
		Opcode:   0x05_FC,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_sat_f64_s",
		Opcode:   0x06_FC,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64.trunc_sat_f64_u",
		Opcode:   0x07_FC,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "memory.init",
		Opcode:   0x08_FC,
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{Type_i32, Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Name:     "data.drop",
		Opcode:   0x09_FC,
		Operands: []Oper{Oper_Ref},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Name:     "memory.copy",
		Opcode:   0x0A_FC,
		Operands: nil,
		StackIn:  []Type{Type_i32, Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Name:     "memory.fill",
		Opcode:   0x0B_FC,
		Operands: nil,
		StackIn:  []Type{Type_i32, Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Name:     "table.init",
		Opcode:   0x0C_FC,
		Operands: []Oper{Oper_Ref, Oper_Ref},
		StackIn:  []Type{Type_i32, Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Name:     "elem.drop",
		Opcode:   0x0D_FC,
		Operands: []Oper{Oper_Ref},
		StackIn:  nil,
		StackOut: nil,
	},
	{
		Name:     "table.copy",
		Opcode:   0x0E_FC,
		Operands: []Oper{Oper_Ref, Oper_Ref},
		StackIn:  []Type{Type_i32, Type_i32, Type_i32},
		StackOut: nil,
	},
	{
		Name:     "table.grow",
		Opcode:   0x0F_FC,
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{t1, Type_i32},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "table.size",
		Opcode:   0x10_FC,
		Operands: []Oper{Oper_Ref},
		StackIn:  nil,
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "table.fill",
		Opcode:   0x11_FC,
		Operands: []Oper{Oper_Ref},
		StackIn:  []Type{Type_i32, t1, Type_i32},
		StackOut: nil,
	},
	{
		Name:     "v128.load",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x00_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load8x8_s",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x01_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load8x8_u",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x02_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load16x4_s",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x03_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load16x4_u",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x04_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load32x2_s",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x05_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load32x2_u",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x06_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load8_splat",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x07_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load16_splat",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x8_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load32_splat",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x09_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load64_splat",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x0A_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.store",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x0B_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: nil,
	},
	{
		Name:     "v128.const",
		Operands: []Oper{Oper_ConstI128},
		Opcode:   0x0C_FD,
		StackIn:  nil,
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.shuffle",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x0D_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.swizzle",
		Opcode:   0x0E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.splat",
		Opcode:   0x0F_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.splat",
		Opcode:   0x10_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.splat",
		Opcode:   0x11_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.splat",
		Opcode:   0x12_FD,
		StackIn:  []Type{Type_i64},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.splat",
		Opcode:   0x13_FD,
		StackIn:  []Type{Type_f32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.splat",
		Opcode:   0x14_FD,
		StackIn:  []Type{Type_f64},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.extract_lane_s",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x15_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i8x16.extract_lane_u",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x16_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i8x16.replace_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x17_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extract_lane_s",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x18_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i16x8.extract_lane_u",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x19_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i16x8.replace_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x1A_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extract_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x1B_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32x4.replace_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x1C_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extract_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x1D_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i64},
	},
	{
		Name:     "i64x2.replace_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x1E_FD,
		StackIn:  []Type{Type_v128, Type_i64},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.extract_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x1F_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_f32},
	},
	{
		Name:     "f32x4.replace_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x20_FD,
		StackIn:  []Type{Type_v128, Type_f32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.extract_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x21_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_f64},
	},
	{
		Name:     "f64x2.replace_lane",
		Operands: []Oper{Oper_LaneIdx},
		Opcode:   0x22_FD,
		StackIn:  []Type{Type_v128, Type_f64},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.eq",
		Opcode:   0x3_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.ne",
		Opcode:   0x24_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.lt_s",
		Opcode:   0x25_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.lt_u",
		Opcode:   0x26_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.gt_s",
		Opcode:   0x27_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.gt_u",
		Opcode:   0x28_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.le_s",
		Opcode:   0x29_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.le_u",
		Opcode:   0x2A_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.ge_s",
		Opcode:   0x2B_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.ge_u",
		Opcode:   0x2C_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.eq",
		Opcode:   0x2D_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.ne",
		Opcode:   0x2E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.lt_s",
		Opcode:   0x2F_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.lt_u",
		Opcode:   0x30_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.gt_s",
		Opcode:   0x31_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.gt_u",
		Opcode:   0x32_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.le_s",
		Opcode:   0x33_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.le_u",
		Opcode:   0x34_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.ge_s",
		Opcode:   0x35_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.ge_u",
		Opcode:   0x36_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.eq",
		Opcode:   0x37_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.ne",
		Opcode:   0x38_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.lt_s",
		Opcode:   0x39_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.lt_u",
		Opcode:   0x3A_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.gt_s",
		Opcode:   0x3B_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.gt_u",
		Opcode:   0x3C_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.le_s",
		Opcode:   0x3D_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.le_u",
		Opcode:   0x3E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.ge_s",
		Opcode:   0x3F_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.ge_u",
		Opcode:   0x40_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.eq",
		Opcode:   0x41_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.ne",
		Opcode:   0x42_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.lt",
		Opcode:   0x43_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.gt",
		Opcode:   0x44_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.le",
		Opcode:   0x45_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.ge",
		Opcode:   0x46_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.eq",
		Opcode:   0x47_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.ne",
		Opcode:   0x48_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.lt",
		Opcode:   0x49_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.gt",
		Opcode:   0x4A_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.le",
		Opcode:   0x4B_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.ge",
		Opcode:   0x4C_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.not",
		Opcode:   0x4D_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.and",
		Opcode:   0x4E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.andnot",
		Opcode:   0x4F_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.or",
		Opcode:   0x50_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.xor",
		Opcode:   0x51_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.bitselect",
		Opcode:   0x52_FD,
		StackIn:  []Type{Type_v128, Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.any_true",
		Opcode:   0x53_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "v128.load8_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x54_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load16_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x55_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load32_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x56_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load64_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x57_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.store8_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x58_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: nil,
	},
	{
		Name:     "v128.store16_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x59_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: nil,
	},
	{
		Name:     "v128.store32_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x5A_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: nil,
	},
	{
		Name:     "v128.store64_lane",
		Operands: []Oper{Oper_MemArg, Oper_LaneIdx},
		Opcode:   0x5B_FD,
		StackIn:  []Type{Type_i32, Type_v128},
		StackOut: nil,
	},
	{
		Name:     "v128.load32_zero",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x5C_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "v128.load64_zero",
		Operands: []Oper{Oper_MemArg},
		Opcode:   0x5D_FD,
		StackIn:  []Type{Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.demote_f64x2_zero",
		Opcode:   0x5E_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.promote_low_f32x4",
		Opcode:   0x5F_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.abs",
		Opcode:   0x60_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.neg",
		Opcode:   0x61_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.popcnt",
		Opcode:   0x62_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.all_true",
		Opcode:   0x63_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i8x16.bitmask",
		Opcode:   0x64_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i8x16.narrow_i16x8_s",
		Opcode:   0x65_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.narrow_i16x8_u",
		Opcode:   0x66_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.ceil",
		Opcode:   0x67_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.floor",
		Opcode:   0x68_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.trunc",
		Opcode:   0x69_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.nearest",
		Opcode:   0x6A_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.shl",
		Opcode:   0x6B_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.shr_s",
		Opcode:   0x6C_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.shr_u",
		Opcode:   0x6D_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.add",
		Opcode:   0x6E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.add_sat_s",
		Opcode:   0x6F_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.add_sat_u",
		Opcode:   0x70_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.sub",
		Opcode:   0x71_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.sub_sat_s",
		Opcode:   0x72_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.sub_sat_u",
		Opcode:   0x73_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.ceil",
		Opcode:   0x74_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.floor",
		Opcode:   0x75_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.min_s",
		Opcode:   0x76_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.min_u",
		Opcode:   0x77_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.max_s",
		Opcode:   0x78_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.max_u",
		Opcode:   0x79_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.trunc",
		Opcode:   0x7A_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i8x16.avgr_u",
		Opcode:   0x7B_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extadd_pairwise_i8x16_s",
		Opcode:   0x7C_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extadd_pairwise_i8x16_u",
		Opcode:   0x7D_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extadd_pairwise_i16x8_s",
		Opcode:   0x7E_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extadd_pairwise_i16x8_u",
		Opcode:   0x7F_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.abs",
		Opcode:   0x01_80_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.neg",
		Opcode:   0x01_81_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.q15mulr_sat_s",
		Opcode:   0x01_82_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.all_true",
		Opcode:   0x01_83_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i16x8.bitmask",
		Opcode:   0x01_84_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i16x8.narrow_i32x4_s",
		Opcode:   0x01_85_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.narrow_i32x4_u",
		Opcode:   0x01_86_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extend_low_i8x16_s",
		Opcode:   0x01_87_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extend_high_i8x16_s",
		Opcode:   0x01_88_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extend_low_i8x16_u",
		Opcode:   0x01_89_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extend_high_i8x16_u",
		Opcode:   0x01_8A_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.shl",
		Opcode:   0x01_8B_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.shr_s",
		Opcode:   0x01_8C_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.shr_u",
		Opcode:   0x01_8D_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.add",
		Opcode:   0x01_8E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.add_sat_s",
		Opcode:   0x01_8F_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.add_sat_u",
		Opcode:   0x01_90_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.sub",
		Opcode:   0x01_91_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.sub_sat_s",
		Opcode:   0x01_92_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.sub_sat_u",
		Opcode:   0x01_93_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.nearest",
		Opcode:   0x01_94_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.mul",
		Opcode:   0x01_95_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.min_s",
		Opcode:   0x01_96_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.min_u",
		Opcode:   0x01_97_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.max_s",
		Opcode:   0x01_98_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.max_u",
		Opcode:   0x01_99_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.avgr_u",
		Opcode:   0x01_9B_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extmul_low_i8x16_s",
		Opcode:   0x01_9C_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extmul_high_i8x16_s",
		Opcode:   0x01_9D_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extmul_low_i8x16_u",
		Opcode:   0x01_9E_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i16x8.extmul_high_i8x16_u",
		Opcode:   0x01_9F_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.abs",
		Opcode:   0x01_A0_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.neg",
		Opcode:   0x01_A1_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.all_true",
		Opcode:   0x01_A3_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32x4.bitmask",
		Opcode:   0x01_A4_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i32x4.extend_low_i16x8_s",
		Opcode:   0x01_A7_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extend_high_i16x8_s",
		Opcode:   0x01_A8_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extend_low_i16x8_u",
		Opcode:   0x01_A9_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extend_high_i16x8_u",
		Opcode:   0x01_AA_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.shl",
		Opcode:   0x01_AB_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.shr_s",
		Opcode:   0x01_AC_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.shr_u",
		Opcode:   0x01_AD_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.add",
		Opcode:   0x01_AE_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.sub",
		Opcode:   0x01_B1_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.mul",
		Opcode:   0x01_B5_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.min_s",
		Opcode:   0x01_B6_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.min_u",
		Opcode:   0x01_B7_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.max_s",
		Opcode:   0x01_B8_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.max_u",
		Opcode:   0x01_B9_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.dot_i16x8_s",
		Opcode:   0x01_BA_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extmul_low_i16x8_s",
		Opcode:   0x01_BC_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extmul_high_i16x8_s",
		Opcode:   0x01_BD_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extmul_low_i16x8_u",
		Opcode:   0x01_BE_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.extmul_high_i16x8_u",
		Opcode:   0x01_BF_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.abs",
		Opcode:   0x01_C0_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.neg",
		Opcode:   0x01_C1_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.all_true",
		Opcode:   0x01_C3_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64x2.bitmask",
		Opcode:   0x01_C4_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_i32},
	},
	{
		Name:     "i64x2.extend_low_i32x4_s",
		Opcode:   0x01_C7_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extend_high_i32x4_s",
		Opcode:   0x01_C8_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extend_low_i32x4_u",
		Opcode:   0x01_C9_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extend_high_i32x4_u",
		Opcode:   0x01_CA_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.shl",
		Opcode:   0x01_CB_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.shr_s",
		Opcode:   0x01_CC_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.shr_u",
		Opcode:   0x01_CD_FD,
		StackIn:  []Type{Type_v128, Type_i32},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.add",
		Opcode:   0x01_CE_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.sub",
		Opcode:   0x01_D1_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.mul",
		Opcode:   0x01_D5_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.eq",
		Opcode:   0x01_D6_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.ne",
		Opcode:   0x01_D7_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.lt_s",
		Opcode:   0x01_D8_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.gt_s",
		Opcode:   0x01_D9_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.le_s",
		Opcode:   0x01_DA_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.ge_s",
		Opcode:   0x01_DB_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extmul_low_i32x4_s",
		Opcode:   0x01_DC_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extmul_high_i32x4_s",
		Opcode:   0x01_DD_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extmul_low_i32x4_u",
		Opcode:   0x01_DE_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i64x2.extmul_high_i32x4_u",
		Opcode:   0x01_DF_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.abs",
		Opcode:   0x01_E0_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.neg",
		Opcode:   0x01_E1_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.sqrt",
		Opcode:   0x01_E3_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.add",
		Opcode:   0x01_E4_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.sub",
		Opcode:   0x01_E5_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.mul",
		Opcode:   0x01_E6_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.div",
		Opcode:   0x01_E7_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.min",
		Opcode:   0x01_E8_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.max",
		Opcode:   0x01_E9_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.pmin",
		Opcode:   0x01_EA_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.pmax",
		Opcode:   0x01_EB_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.abs",
		Opcode:   0x01_EC_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.neg",
		Opcode:   0x01_ED_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.sqrt",
		Opcode:   0x01_EF_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.add",
		Opcode:   0x01_F0_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.sub",
		Opcode:   0x01_F1_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.mul",
		Opcode:   0x01_F2_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.div",
		Opcode:   0x01_F3_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.min",
		Opcode:   0x01_F4_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.max",
		Opcode:   0x01_F5_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.pmin",
		Opcode:   0x01_F6_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.pmax",
		Opcode:   0x01_F7_FD,
		StackIn:  []Type{Type_v128, Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.trunc_sat_f32x4_s",
		Opcode:   0x01_F8_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.trunc_sat_f32x4_u",
		Opcode:   0x01_F9_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.convert_i32x4_s",
		Opcode:   0x01_FA_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f32x4.convert_i32x4_u",
		Opcode:   0x01_FB_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.trunc_sat_f64x2_s_zero",
		Opcode:   0x01_FC_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "i32x4.trunc_sat_f64x2_u_zero",
		Opcode:   0x01_FD_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.convert_low_i32x4_s",
		Opcode:   0x01_FE_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
	{
		Name:     "f64x2.convert_low_i32x4_u",
		Opcode:   0x01_FF_FD,
		StackIn:  []Type{Type_v128},
		StackOut: []Type{Type_v128},
	},
}
